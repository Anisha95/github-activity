{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/weather-app/src/components/home.jsx\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY } from \"../constants\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekArr: [{\n        id: 1,\n        day: \"Sun\",\n        maxTemp: 28,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 2,\n        day: \"Mon\",\n        maxTemp: 23,\n        minTemp: 14,\n        status: \"Cloudy\"\n      }, {\n        id: 3,\n        day: \"Tue\",\n        maxTemp: 27,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 4,\n        day: \"Wed\",\n        maxTemp: 30,\n        minTemp: 26,\n        status: \"Sunny\"\n      }, {\n        id: 5,\n        day: \"Thu\",\n        maxTemp: 22,\n        minTemp: 11,\n        status: \"Sunny\"\n      }, {\n        id: 6,\n        day: \"Fri\",\n        maxTemp: 27,\n        minTemp: 17,\n        status: \"Rainfall\"\n      }, {\n        id: 7,\n        day: \"Sat\",\n        maxTemp: 21,\n        minTemp: 12,\n        status: \"Sunny\"\n      }],\n      geoLocCity: '',\n      weatherUpdate: null\n    };\n\n    this.getWeatherUpdate = (maxTemp, minTemp) => {\n      let {\n        weekArr\n      } = this.state;\n      let activeIndex = new Date().getDay();\n      weekArr[activeIndex].maxTemp = maxTemp;\n      weekArr[activeIndex].minTemp = minTemp;\n      this.setState({\n        weekArr: weekArr\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      let city = this.state.geoLocCity; //let city = 'Chennai';\n\n      fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`).then(response => response.json()).then(responseData => {\n        this.setState({\n          weatherUpdate: responseData\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(MdLocationOn, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"search\",\n          style: {\n            width: \"90%\",\n            border: \"none\"\n          },\n          placeholder: \"Search or jump to...\",\n          onChange: e => this.setState({\n            geoLocCity: e.target.value\n          }),\n          value: this.state.geoLocCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.secondDiv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    marginTop: '14%',\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\nexport default Home;","map":{"version":3,"sources":["/home/anisha/weather-app/src/components/home.jsx"],"names":["React","Component","FaSearch","MdLocationOn","SecondComponent","WeatherReport","confirmAlert","API_KEY","GEO_API_KEY","Home","state","weekArr","id","day","maxTemp","minTemp","status","geoLocCity","weatherUpdate","getWeatherUpdate","activeIndex","Date","getDay","setState","componentDidMount","componentDidUpdate","prevProps","prevState","city","fetch","then","response","json","responseData","render","styles","mainStyle","boxStyle","width","border","e","target","value","secondDiv","display","alignItems","margin","marginLeft","marginRight","flexDirection","height","marginTop","borderRadius","padding","justifyContent","boxShadow","flexGrow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY } from \"../constants\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Home extends Component {\n  state = {\n    weekArr: [\n      { id: 1, day: \"Sun\", maxTemp: 28, minTemp: 19, status: \"Sunny\" },\n      { id: 2, day: \"Mon\", maxTemp: 23, minTemp: 14, status: \"Cloudy\" },\n      { id: 3, day: \"Tue\", maxTemp: 27, minTemp: 19, status: \"Sunny\" },\n      { id: 4, day: \"Wed\", maxTemp: 30, minTemp: 26, status: \"Sunny\" },\n      { id: 5, day: \"Thu\", maxTemp: 22, minTemp: 11, status: \"Sunny\" },\n      { id: 6, day: \"Fri\", maxTemp: 27, minTemp: 17, status: \"Rainfall\" },\n      { id: 7, day: \"Sat\", maxTemp: 21, minTemp: 12, status: \"Sunny\" }\n    ],\n    geoLocCity: '',\n    weatherUpdate: null,\n  };\n\n  getWeatherUpdate = (maxTemp, minTemp) => {\n    let {weekArr} = this.state;\n    let activeIndex = new Date().getDay();\n    weekArr[activeIndex].maxTemp = maxTemp;\n    weekArr[activeIndex].minTemp = minTemp;\n    this.setState({\n        weekArr: weekArr\n    })\n  };\n\n  componentDidMount() {\n   \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      let city = this.state.geoLocCity;\n      //let city = 'Chennai';\n      fetch(\n        `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`\n      )\n        .then(response => response.json())\n        .then(responseData => {\n          this.setState({\n            weatherUpdate: responseData\n          });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.mainStyle}>\n        <div style={styles.boxStyle}>\n          <MdLocationOn size=\"2em\" />\n          <input\n            type=\"search\"\n            className=\"search\"\n            style={{ width: \"90%\", border: \"none\"}}\n            placeholder={\"Search or jump to...\"}\n            onChange={e =>\n              this.setState({\n                geoLocCity: e.target.value\n              })\n            }\n            value={this.state.geoLocCity}\n          />\n          {/* </div> */}\n          <FaSearch size=\"2em\" />\n        </div>\n        <div style={styles.secondDiv}>\n         \n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    marginTop: '14%',\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}